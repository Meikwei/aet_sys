// Code generated by https://github.com/zhufuyi/sponge

package handler

import (
	"context"

	sysV1 "github.com/Meikwei/aet_sys/api/sys/v1"
	"github.com/Meikwei/aet_sys/internal/service"
)

var _ sysV1.SysUserLogicer = (*sysUserHandler)(nil)

type sysUserHandler struct {
	server sysV1.SysUserServer
}

// NewSysUserHandler create a handler
func NewSysUserHandler() sysV1.SysUserLogicer {
	return &sysUserHandler{
		server: service.NewSysUserServer(),
	}
}

// Create sysUser
func (h *sysUserHandler) Create(ctx context.Context, req *sysV1.CreateSysUserRequest) (*sysV1.CreateSysUserReply, error) {
	return h.server.Create(ctx, req)
}

// DeleteByID delete sysUser by id
func (h *sysUserHandler) DeleteByID(ctx context.Context, req *sysV1.DeleteSysUserByIDRequest) (*sysV1.DeleteSysUserByIDReply, error) {
	return h.server.DeleteByID(ctx, req)
}

// DeleteByIDs delete sysUser by batch id
func (h *sysUserHandler) DeleteByIDs(ctx context.Context, req *sysV1.DeleteSysUserByIDsRequest) (*sysV1.DeleteSysUserByIDsReply, error) {
	return h.server.DeleteByIDs(ctx, req)
}

// UpdateByID update sysUser by id
func (h *sysUserHandler) UpdateByID(ctx context.Context, req *sysV1.UpdateSysUserByIDRequest) (*sysV1.UpdateSysUserByIDReply, error) {
	return h.server.UpdateByID(ctx, req)
}

// GetByID get sysUser by id
func (h *sysUserHandler) GetByID(ctx context.Context, req *sysV1.GetSysUserByIDRequest) (*sysV1.GetSysUserByIDReply, error) {
	return h.server.GetByID(ctx, req)
}

// GetByCondition get sysUser by condition
func (h *sysUserHandler) GetByCondition(ctx context.Context, req *sysV1.GetSysUserByConditionRequest) (*sysV1.GetSysUserByConditionReply, error) {
	return h.server.GetByCondition(ctx, req)
}

// ListByIDs list of sysUser by batch id
func (h *sysUserHandler) ListByIDs(ctx context.Context, req *sysV1.ListSysUserByIDsRequest) (*sysV1.ListSysUserByIDsReply, error) {
	return h.server.ListByIDs(ctx, req)
}

// ListByLastID list sysUser by last id
func (h *sysUserHandler) ListByLastID(ctx context.Context, req *sysV1.ListSysUserByLastIDRequest) (*sysV1.ListSysUserByLastIDReply, error) {
	return h.server.ListByLastID(ctx, req)
}

// List of sysUser by query parameters
func (h *sysUserHandler) List(ctx context.Context, req *sysV1.ListSysUserRequest) (*sysV1.ListSysUserReply, error) {
	return h.server.List(ctx, req)
}
