syntax = "proto3";

package api.sys.v1;

import "api/types/types.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "tagger/tagger.proto";
import "validate/validate.proto";

option go_package = "github.com/Meikwei/aet_sys/api/sys/v1;v1";

// Default settings for generating swagger documents
// NOTE: because json does not support 64 bits, the int64 and uint64 types under *.swagger.json are automatically converted to string types
// Reference https://github.com/grpc-ecosystem/grpc-gateway/blob/db7fbefff7c04877cdb32e16d4a248a024428207/examples/internal/proto/examplepb/a_bit_of_everything.proto  
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  host: "localhost:8080"
  base_path: ""
  info: {
    title: "sys api docs";
    version: "2.0";
  }
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BearerAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
        description: "Type Bearer your-jwt-token to Value";
      }
    }
  }
};

service sysRole {
  // create sysRole
  rpc Create(CreateSysRoleRequest) returns (CreateSysRoleReply) {
    option (google.api.http) = {
      post: "/api/v1/sysRole"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "create sysRole",
      description: "submit information to create sysRole",
    };
  }

  // delete sysRole by id
  rpc DeleteByID(DeleteSysRoleByIDRequest) returns (DeleteSysRoleByIDReply) {
    option (google.api.http) = {
      delete: "/api/v1/sysRole/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "delete sysRole",
      description: "delete sysRole by id",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }

  // delete sysRole by batch id
  rpc DeleteByIDs(DeleteSysRoleByIDsRequest) returns (DeleteSysRoleByIDsReply) {
    option (google.api.http) = {
      post: "/api/v1/sysRole/delete/ids"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "delete sysRoles by batch id",
      description: "delete sysRoles by batch id",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }

  // update sysRole by id
  rpc UpdateByID(UpdateSysRoleByIDRequest) returns (UpdateSysRoleByIDReply) {
    option (google.api.http) = {
      put: "/api/v1/sysRole/{id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "update sysRole",
      description: "update sysRole by id",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }

  // get sysRole by id
  rpc GetByID(GetSysRoleByIDRequest) returns (GetSysRoleByIDReply) {
    option (google.api.http) = {
      get: "/api/v1/sysRole/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "get sysRole detail",
      description: "get sysRole detail by id",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }

  // get sysRole by condition
  rpc GetByCondition(GetSysRoleByConditionRequest) returns (GetSysRoleByConditionReply) {
    option (google.api.http) = {
      post: "/api/v1/sysRole/condition"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "get sysRole detail by condition",
      description: "get sysRole detail by condition",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }

  // list of sysRole by batch id
  rpc ListByIDs(ListSysRoleByIDsRequest) returns (ListSysRoleByIDsReply) {
    option (google.api.http) = {
      post: "/api/v1/sysRole/list/ids"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "list of sysRoles by batch id",
      description: "list of sysRoles by batch id",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }

  // list sysRole by last id
  rpc ListByLastID(ListSysRoleByLastIDRequest) returns (ListSysRoleByLastIDReply) {
    option (google.api.http) = {
      get: "/api/v1/sysRole/list"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "list of sysRole by last id",
      description: "list of sysRole by last id",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }

  // list of sysRole by query parameters
  rpc List(ListSysRoleRequest) returns (ListSysRoleReply) {
    option (google.api.http) = {
      post: "/api/v1/sysRole/list"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "list of sysRoles by parameters",
      description: "list of sysRoles by paging and conditions",
      //security: {
      //  security_requirement: {
      //    key: "BearerAuth";
      //    value: {}
      //  }
      //}
    };
  }
}

// Some notes on defining fields under message:
// (1) Fill in the validate rules https://github.com/envoyproxy/protoc-gen-validate#constraint-rules
// (2) When using the protoc-gen-openapiv2 plugin, if the defined fields are snake case,
//      you must add annotations for snake case names, such as string foo_bar = 1 [json_name = "foo_bar"],
//      to ensure that the front end and back end JSON naming is consistent.
// (3) If the route contains the path parameter, such as /api/v1/sysRole/{id}, the defined
//      message  must contain the name of the path parameter and the name should be
//      added with a new tag, such as int64 id = 1 [(tagger.tags) = "uri:\"id\""];
// (4) If the request url is followed by a query parameter, such as /api/v1/getSysRole?name=Tom,
//      a form tag must be added when defining the query parameter in the message,
//      such as string name = 1 [(tagger.tags) = "form:\"name\""];


message CreateSysRoleRequest {
	string roleName = 1;  // 角色名称
	string roleDesc = 2;  // 角色描述
	string createUser = 3;  // 创建人
	string updateUser = 4;  // 更新人
}

message CreateSysRoleReply {
  uint64 id = 1;
}

message DeleteSysRoleByIDRequest {
  uint64 id =1 [(validate.rules).uint64.gt = 0, (tagger.tags) = "uri:\"id\""];
}

message DeleteSysRoleByIDReply {

}

message DeleteSysRoleByIDsRequest {
  repeated uint64 ids = 1 [(validate.rules).repeated.min_items = 1];
}

message DeleteSysRoleByIDsReply {

}

message UpdateSysRoleByIDRequest {
	uint64 id = 1 [(tagger.tags) = "uri:\"id\"" ];  // 角色ID
	string roleName = 2;  // 角色名称
	string roleDesc = 3;  // 角色描述
	string createUser = 4;  // 创建人
	string updateUser = 5;  // 更新人
}

message UpdateSysRoleByIDReply {

}

message SysRole {
	uint64 id = 1;  // 角色ID
	string roleName = 2;  // 角色名称
	string roleDesc = 3;  // 角色描述
	string createUser = 4;  // 创建人
	string updateUser = 5;  // 更新人
	string createdAt = 6;  // 创建时间
	string updatedAt = 7;  // 更新时间
}

message GetSysRoleByIDRequest {
  uint64 id =1 [(validate.rules).uint64.gt = 0, (tagger.tags) = "uri:\"id\"" ];
}

message GetSysRoleByIDReply {
  SysRole sysRole = 1;
}

message GetSysRoleByConditionRequest {
  types.Conditions conditions = 1;
}

message GetSysRoleByConditionReply {
  SysRole sysRole = 1;
}

message ListSysRoleByIDsRequest {
  repeated uint64 ids = 1 [(validate.rules).repeated.min_items = 1];
}

message ListSysRoleByIDsReply {
  repeated SysRole sysRoles = 1;
}

message ListSysRoleByLastIDRequest {
  uint64 lastID = 1 [(tagger.tags) = "form:\"lastID\""]; // last id
  uint32 limit = 2 [(validate.rules).uint32.gt = 0, (tagger.tags) = "form:\"limit\""]; // limit size per page
  string sort = 3 [(tagger.tags) = "form:\"sort\""]; // sort by column name of table, default is -id, the - sign indicates descending order.
}

message ListSysRoleByLastIDReply {
  repeated SysRole sysRoles = 1;
}

message ListSysRoleRequest {
  types.Params params = 1;
}

message ListSysRoleReply {
  int64 total =1;
  repeated SysRole sysRoles = 2;
}


