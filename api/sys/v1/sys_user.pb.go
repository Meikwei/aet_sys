// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.2
// source: api/sys/v1/sys_user.proto

package v1

import (
	types "github.com/Meikwei/aet_sys/api/types"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSysUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName     string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`         // 用户名昵称
	UserNumber   string `protobuf:"bytes,2,opt,name=userNumber,proto3" json:"userNumber"`     // 用户编号
	UserPassword string `protobuf:"bytes,3,opt,name=userPassword,proto3" json:"userPassword"` // 用户密码
	UserPhone    string `protobuf:"bytes,4,opt,name=userPhone,proto3" json:"userPhone"`       // 用户手机号
	UserAvatar   string `protobuf:"bytes,5,opt,name=userAvatar,proto3" json:"userAvatar"`     // 用户头像
	CreateUser   string `protobuf:"bytes,6,opt,name=createUser,proto3" json:"createUser"`     // 创建人
	UpdateUser   string `protobuf:"bytes,7,opt,name=updateUser,proto3" json:"updateUser"`     // 更新人
}

func (x *CreateSysUserRequest) Reset() {
	*x = CreateSysUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysUserRequest) ProtoMessage() {}

func (x *CreateSysUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysUserRequest.ProtoReflect.Descriptor instead.
func (*CreateSysUserRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSysUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateSysUserRequest) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *CreateSysUserRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *CreateSysUserRequest) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *CreateSysUserRequest) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *CreateSysUserRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *CreateSysUserRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type CreateSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateSysUserReply) Reset() {
	*x = CreateSysUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysUserReply) ProtoMessage() {}

func (x *CreateSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysUserReply.ProtoReflect.Descriptor instead.
func (*CreateSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSysUserReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSysUserByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteSysUserByIDRequest) Reset() {
	*x = DeleteSysUserByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysUserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserByIDRequest) ProtoMessage() {}

func (x *DeleteSysUserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteSysUserByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSysUserByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSysUserByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSysUserByIDReply) Reset() {
	*x = DeleteSysUserByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysUserByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserByIDReply) ProtoMessage() {}

func (x *DeleteSysUserByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteSysUserByIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{3}
}

type DeleteSysUserByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *DeleteSysUserByIDsRequest) Reset() {
	*x = DeleteSysUserByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysUserByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserByIDsRequest) ProtoMessage() {}

func (x *DeleteSysUserByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserByIDsRequest.ProtoReflect.Descriptor instead.
func (*DeleteSysUserByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSysUserByIDsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteSysUserByIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSysUserByIDsReply) Reset() {
	*x = DeleteSysUserByIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysUserByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserByIDsReply) ProtoMessage() {}

func (x *DeleteSysUserByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserByIDsReply.ProtoReflect.Descriptor instead.
func (*DeleteSysUserByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{5}
}

type UpdateSysUserByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                    // 用户ID
	UserName     string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName"`         // 用户名昵称
	UserNumber   string `protobuf:"bytes,3,opt,name=userNumber,proto3" json:"userNumber"`     // 用户编号
	UserPassword string `protobuf:"bytes,4,opt,name=userPassword,proto3" json:"userPassword"` // 用户密码
	UserPhone    string `protobuf:"bytes,5,opt,name=userPhone,proto3" json:"userPhone"`       // 用户手机号
	UserAvatar   string `protobuf:"bytes,6,opt,name=userAvatar,proto3" json:"userAvatar"`     // 用户头像
	CreateUser   string `protobuf:"bytes,7,opt,name=createUser,proto3" json:"createUser"`     // 创建人
	UpdateUser   string `protobuf:"bytes,8,opt,name=updateUser,proto3" json:"updateUser"`     // 更新人
}

func (x *UpdateSysUserByIDRequest) Reset() {
	*x = UpdateSysUserByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysUserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserByIDRequest) ProtoMessage() {}

func (x *UpdateSysUserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateSysUserByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSysUserByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysUserByIDRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateSysUserByIDRequest) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *UpdateSysUserByIDRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *UpdateSysUserByIDRequest) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *UpdateSysUserByIDRequest) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *UpdateSysUserByIDRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *UpdateSysUserByIDRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type UpdateSysUserByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysUserByIDReply) Reset() {
	*x = UpdateSysUserByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysUserByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserByIDReply) ProtoMessage() {}

func (x *UpdateSysUserByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateSysUserByIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{7}
}

type SysUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                    // 用户ID
	UserName     string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName"`         // 用户名昵称
	UserNumber   string `protobuf:"bytes,3,opt,name=userNumber,proto3" json:"userNumber"`     // 用户编号
	UserPassword string `protobuf:"bytes,4,opt,name=userPassword,proto3" json:"userPassword"` // 用户密码
	UserPhone    string `protobuf:"bytes,5,opt,name=userPhone,proto3" json:"userPhone"`       // 用户手机号
	UserAvatar   string `protobuf:"bytes,6,opt,name=userAvatar,proto3" json:"userAvatar"`     // 用户头像
	CreateUser   string `protobuf:"bytes,7,opt,name=createUser,proto3" json:"createUser"`     // 创建人
	UpdateUser   string `protobuf:"bytes,8,opt,name=updateUser,proto3" json:"updateUser"`     // 更新人
	CreatedAt    string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt"`       // 创建时间
	UpdatedAt    string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt"`      // 更新时间
}

func (x *SysUser) Reset() {
	*x = SysUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUser) ProtoMessage() {}

func (x *SysUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUser.ProtoReflect.Descriptor instead.
func (*SysUser) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{8}
}

func (x *SysUser) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SysUser) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *SysUser) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *SysUser) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *SysUser) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *SysUser) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *SysUser) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *SysUser) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysUser) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetSysUserByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *GetSysUserByIDRequest) Reset() {
	*x = GetSysUserByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysUserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserByIDRequest) ProtoMessage() {}

func (x *GetSysUserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSysUserByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetSysUserByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysUserByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysUser *SysUser `protobuf:"bytes,1,opt,name=sysUser,proto3" json:"sysUser"`
}

func (x *GetSysUserByIDReply) Reset() {
	*x = GetSysUserByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysUserByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserByIDReply) ProtoMessage() {}

func (x *GetSysUserByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserByIDReply.ProtoReflect.Descriptor instead.
func (*GetSysUserByIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{10}
}

func (x *GetSysUserByIDReply) GetSysUser() *SysUser {
	if x != nil {
		return x.SysUser
	}
	return nil
}

type GetSysUserByConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions *types.Conditions `protobuf:"bytes,1,opt,name=conditions,proto3" json:"conditions"`
}

func (x *GetSysUserByConditionRequest) Reset() {
	*x = GetSysUserByConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysUserByConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserByConditionRequest) ProtoMessage() {}

func (x *GetSysUserByConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserByConditionRequest.ProtoReflect.Descriptor instead.
func (*GetSysUserByConditionRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{11}
}

func (x *GetSysUserByConditionRequest) GetConditions() *types.Conditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type GetSysUserByConditionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysUser *SysUser `protobuf:"bytes,1,opt,name=sysUser,proto3" json:"sysUser"`
}

func (x *GetSysUserByConditionReply) Reset() {
	*x = GetSysUserByConditionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysUserByConditionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserByConditionReply) ProtoMessage() {}

func (x *GetSysUserByConditionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserByConditionReply.ProtoReflect.Descriptor instead.
func (*GetSysUserByConditionReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{12}
}

func (x *GetSysUserByConditionReply) GetSysUser() *SysUser {
	if x != nil {
		return x.SysUser
	}
	return nil
}

type ListSysUserByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *ListSysUserByIDsRequest) Reset() {
	*x = ListSysUserByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysUserByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserByIDsRequest) ProtoMessage() {}

func (x *ListSysUserByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserByIDsRequest.ProtoReflect.Descriptor instead.
func (*ListSysUserByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{13}
}

func (x *ListSysUserByIDsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListSysUserByIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysUsers []*SysUser `protobuf:"bytes,1,rep,name=sysUsers,proto3" json:"sysUsers"`
}

func (x *ListSysUserByIDsReply) Reset() {
	*x = ListSysUserByIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysUserByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserByIDsReply) ProtoMessage() {}

func (x *ListSysUserByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserByIDsReply.ProtoReflect.Descriptor instead.
func (*ListSysUserByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{14}
}

func (x *ListSysUserByIDsReply) GetSysUsers() []*SysUser {
	if x != nil {
		return x.SysUsers
	}
	return nil
}

type ListSysUserByLastIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastID uint64 `protobuf:"varint,1,opt,name=lastID,proto3" json:"lastID"` // last id
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`   // limit size per page
	Sort   string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort"`      // sort by column name of table, default is -id, the - sign indicates descending order.
}

func (x *ListSysUserByLastIDRequest) Reset() {
	*x = ListSysUserByLastIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysUserByLastIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserByLastIDRequest) ProtoMessage() {}

func (x *ListSysUserByLastIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserByLastIDRequest.ProtoReflect.Descriptor instead.
func (*ListSysUserByLastIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{15}
}

func (x *ListSysUserByLastIDRequest) GetLastID() uint64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

func (x *ListSysUserByLastIDRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSysUserByLastIDRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type ListSysUserByLastIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysUsers []*SysUser `protobuf:"bytes,1,rep,name=sysUsers,proto3" json:"sysUsers"`
}

func (x *ListSysUserByLastIDReply) Reset() {
	*x = ListSysUserByLastIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysUserByLastIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserByLastIDReply) ProtoMessage() {}

func (x *ListSysUserByLastIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserByLastIDReply.ProtoReflect.Descriptor instead.
func (*ListSysUserByLastIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{16}
}

func (x *ListSysUserByLastIDReply) GetSysUsers() []*SysUser {
	if x != nil {
		return x.SysUsers
	}
	return nil
}

type ListSysUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListSysUserRequest) Reset() {
	*x = ListSysUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserRequest) ProtoMessage() {}

func (x *ListSysUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserRequest.ProtoReflect.Descriptor instead.
func (*ListSysUserRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{17}
}

func (x *ListSysUserRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64      `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	SysUsers []*SysUser `protobuf:"bytes,2,rep,name=sysUsers,proto3" json:"sysUsers"`
}

func (x *ListSysUserReply) Reset() {
	*x = ListSysUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserReply) ProtoMessage() {}

func (x *ListSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserReply.ProtoReflect.Descriptor instead.
func (*ListSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_user_proto_rawDescGZIP(), []int{18}
}

func (x *ListSysUserReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSysUserReply) GetSysUsers() []*SysUser {
	if x != nil {
		return x.SysUsers
	}
	return nil
}

var File_api_sys_v1_sys_user_proto protoreflect.FileDescriptor

var file_api_sys_v1_sys_user_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x33, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x37, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x88, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb3, 0x02, 0x0a, 0x07, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x44, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x07, 0x73, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x07, 0x73, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x48, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x08, 0x73, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x22, 0x4b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f,
	0x0a, 0x08, 0x73, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x73, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x3b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x73, 0x32, 0xd6, 0x0c, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x96, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x4a, 0x92, 0x41, 0x29, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x2a, 0x0f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xaa, 0x01, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x52, 0x92, 0x41, 0x2f, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x0c, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0x2a, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xba, 0x01, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5f, 0x92, 0x41, 0x36, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0xe6, 0x89, 0xb9, 0xe9, 0x87, 0x8f, 0xe5, 0x88, 0xa0, 0xe9,
	0x99, 0xa4, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x2a, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x73,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x03, 0x69, 0x64, 0x73, 0x22, 0x19, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0xb5, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x5d, 0x92, 0x41, 0x37, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14,
	0xe9, 0x80, 0x9a, 0xe8, 0xbf, 0x87, 0x49, 0x44, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0x2a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x3a, 0x01, 0x2a, 0x1a, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa3,
	0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x54,
	0x92, 0x41, 0x34, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0xe9,
	0x80, 0x9a, 0xe8, 0xbf, 0x87, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0x2a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0xcc, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x68, 0x92, 0x41, 0x3f, 0x0a, 0x08,
	0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0xe9, 0x80, 0x9a, 0xe8, 0xbf, 0x87,
	0xe6, 0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0x2a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0xb7, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x62, 0x92, 0x41, 0x3c, 0x0a, 0x08,
	0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0xe9, 0x80, 0x9a, 0xe8, 0xbf, 0x87,
	0x49, 0x44, 0xe6, 0x89, 0xb9, 0xe9, 0x87, 0x8f, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0x2a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x3a, 0x03, 0x69, 0x64, 0x73, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0xcb, 0x01,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6d, 0x92, 0x41,
	0x46, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0xe9, 0x80, 0x9a,
	0xe8, 0xbf, 0x87, 0xe6, 0x9c, 0x80, 0xe5, 0x90, 0x8e, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x2a, 0x18, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a,
	0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x92, 0x01, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x4c, 0x92, 0x41, 0x2d, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5,
	0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x2a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x41, 0x92, 0x41, 0x14, 0x12, 0x0f, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x69, 0x6b, 0x77, 0x65, 0x69, 0x2f, 0x61, 0x65,
	0x74, 0x5f, 0x73, 0x79, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_sys_v1_sys_user_proto_rawDescOnce sync.Once
	file_api_sys_v1_sys_user_proto_rawDescData = file_api_sys_v1_sys_user_proto_rawDesc
)

func file_api_sys_v1_sys_user_proto_rawDescGZIP() []byte {
	file_api_sys_v1_sys_user_proto_rawDescOnce.Do(func() {
		file_api_sys_v1_sys_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sys_v1_sys_user_proto_rawDescData)
	})
	return file_api_sys_v1_sys_user_proto_rawDescData
}

var file_api_sys_v1_sys_user_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_sys_v1_sys_user_proto_goTypes = []interface{}{
	(*CreateSysUserRequest)(nil),         // 0: api.sys.v1.CreateSysUserRequest
	(*CreateSysUserReply)(nil),           // 1: api.sys.v1.CreateSysUserReply
	(*DeleteSysUserByIDRequest)(nil),     // 2: api.sys.v1.DeleteSysUserByIDRequest
	(*DeleteSysUserByIDReply)(nil),       // 3: api.sys.v1.DeleteSysUserByIDReply
	(*DeleteSysUserByIDsRequest)(nil),    // 4: api.sys.v1.DeleteSysUserByIDsRequest
	(*DeleteSysUserByIDsReply)(nil),      // 5: api.sys.v1.DeleteSysUserByIDsReply
	(*UpdateSysUserByIDRequest)(nil),     // 6: api.sys.v1.UpdateSysUserByIDRequest
	(*UpdateSysUserByIDReply)(nil),       // 7: api.sys.v1.UpdateSysUserByIDReply
	(*SysUser)(nil),                      // 8: api.sys.v1.SysUser
	(*GetSysUserByIDRequest)(nil),        // 9: api.sys.v1.GetSysUserByIDRequest
	(*GetSysUserByIDReply)(nil),          // 10: api.sys.v1.GetSysUserByIDReply
	(*GetSysUserByConditionRequest)(nil), // 11: api.sys.v1.GetSysUserByConditionRequest
	(*GetSysUserByConditionReply)(nil),   // 12: api.sys.v1.GetSysUserByConditionReply
	(*ListSysUserByIDsRequest)(nil),      // 13: api.sys.v1.ListSysUserByIDsRequest
	(*ListSysUserByIDsReply)(nil),        // 14: api.sys.v1.ListSysUserByIDsReply
	(*ListSysUserByLastIDRequest)(nil),   // 15: api.sys.v1.ListSysUserByLastIDRequest
	(*ListSysUserByLastIDReply)(nil),     // 16: api.sys.v1.ListSysUserByLastIDReply
	(*ListSysUserRequest)(nil),           // 17: api.sys.v1.ListSysUserRequest
	(*ListSysUserReply)(nil),             // 18: api.sys.v1.ListSysUserReply
	(*types.Conditions)(nil),             // 19: types.Conditions
	(*types.Params)(nil),                 // 20: types.Params
}
var file_api_sys_v1_sys_user_proto_depIdxs = []int32{
	8,  // 0: api.sys.v1.GetSysUserByIDReply.sysUser:type_name -> api.sys.v1.SysUser
	19, // 1: api.sys.v1.GetSysUserByConditionRequest.conditions:type_name -> types.Conditions
	8,  // 2: api.sys.v1.GetSysUserByConditionReply.sysUser:type_name -> api.sys.v1.SysUser
	8,  // 3: api.sys.v1.ListSysUserByIDsReply.sysUsers:type_name -> api.sys.v1.SysUser
	8,  // 4: api.sys.v1.ListSysUserByLastIDReply.sysUsers:type_name -> api.sys.v1.SysUser
	20, // 5: api.sys.v1.ListSysUserRequest.params:type_name -> types.Params
	8,  // 6: api.sys.v1.ListSysUserReply.sysUsers:type_name -> api.sys.v1.SysUser
	0,  // 7: api.sys.v1.sysUser.Create:input_type -> api.sys.v1.CreateSysUserRequest
	2,  // 8: api.sys.v1.sysUser.DeleteByID:input_type -> api.sys.v1.DeleteSysUserByIDRequest
	4,  // 9: api.sys.v1.sysUser.DeleteByIDs:input_type -> api.sys.v1.DeleteSysUserByIDsRequest
	6,  // 10: api.sys.v1.sysUser.UpdateByID:input_type -> api.sys.v1.UpdateSysUserByIDRequest
	9,  // 11: api.sys.v1.sysUser.GetByID:input_type -> api.sys.v1.GetSysUserByIDRequest
	11, // 12: api.sys.v1.sysUser.GetByCondition:input_type -> api.sys.v1.GetSysUserByConditionRequest
	13, // 13: api.sys.v1.sysUser.ListByIDs:input_type -> api.sys.v1.ListSysUserByIDsRequest
	15, // 14: api.sys.v1.sysUser.ListByLastID:input_type -> api.sys.v1.ListSysUserByLastIDRequest
	17, // 15: api.sys.v1.sysUser.List:input_type -> api.sys.v1.ListSysUserRequest
	1,  // 16: api.sys.v1.sysUser.Create:output_type -> api.sys.v1.CreateSysUserReply
	3,  // 17: api.sys.v1.sysUser.DeleteByID:output_type -> api.sys.v1.DeleteSysUserByIDReply
	5,  // 18: api.sys.v1.sysUser.DeleteByIDs:output_type -> api.sys.v1.DeleteSysUserByIDsReply
	7,  // 19: api.sys.v1.sysUser.UpdateByID:output_type -> api.sys.v1.UpdateSysUserByIDReply
	10, // 20: api.sys.v1.sysUser.GetByID:output_type -> api.sys.v1.GetSysUserByIDReply
	12, // 21: api.sys.v1.sysUser.GetByCondition:output_type -> api.sys.v1.GetSysUserByConditionReply
	14, // 22: api.sys.v1.sysUser.ListByIDs:output_type -> api.sys.v1.ListSysUserByIDsReply
	16, // 23: api.sys.v1.sysUser.ListByLastID:output_type -> api.sys.v1.ListSysUserByLastIDReply
	18, // 24: api.sys.v1.sysUser.List:output_type -> api.sys.v1.ListSysUserReply
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_sys_v1_sys_user_proto_init() }
func file_api_sys_v1_sys_user_proto_init() {
	if File_api_sys_v1_sys_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_sys_v1_sys_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysUserByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysUserByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysUserByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysUserByIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysUserByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysUserByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysUserByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysUserByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysUserByConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysUserByConditionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysUserByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysUserByIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysUserByLastIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysUserByLastIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sys_v1_sys_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sys_v1_sys_user_proto_goTypes,
		DependencyIndexes: file_api_sys_v1_sys_user_proto_depIdxs,
		MessageInfos:      file_api_sys_v1_sys_user_proto_msgTypes,
	}.Build()
	File_api_sys_v1_sys_user_proto = out.File
	file_api_sys_v1_sys_user_proto_rawDesc = nil
	file_api_sys_v1_sys_user_proto_goTypes = nil
	file_api_sys_v1_sys_user_proto_depIdxs = nil
}
