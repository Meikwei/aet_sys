// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.2
// source: api/sys/v1/sysRole.proto

package v1

import (
	types "github.com/Meikwei/aet_sys/api/types"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSysRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName   string `protobuf:"bytes,1,opt,name=roleName,proto3" json:"roleName"`     // 角色名称
	RoleDesc   string `protobuf:"bytes,2,opt,name=roleDesc,proto3" json:"roleDesc"`     // 角色描述
	CreateUser string `protobuf:"bytes,3,opt,name=createUser,proto3" json:"createUser"` // 创建人
	UpdateUser string `protobuf:"bytes,4,opt,name=updateUser,proto3" json:"updateUser"` // 更新人
}

func (x *CreateSysRoleRequest) Reset() {
	*x = CreateSysRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysRoleRequest) ProtoMessage() {}

func (x *CreateSysRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateSysRoleRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSysRoleRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *CreateSysRoleRequest) GetRoleDesc() string {
	if x != nil {
		return x.RoleDesc
	}
	return ""
}

func (x *CreateSysRoleRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *CreateSysRoleRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type CreateSysRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateSysRoleReply) Reset() {
	*x = CreateSysRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysRoleReply) ProtoMessage() {}

func (x *CreateSysRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysRoleReply.ProtoReflect.Descriptor instead.
func (*CreateSysRoleReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSysRoleReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSysRoleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteSysRoleByIDRequest) Reset() {
	*x = DeleteSysRoleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysRoleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysRoleByIDRequest) ProtoMessage() {}

func (x *DeleteSysRoleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysRoleByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteSysRoleByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSysRoleByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSysRoleByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSysRoleByIDReply) Reset() {
	*x = DeleteSysRoleByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysRoleByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysRoleByIDReply) ProtoMessage() {}

func (x *DeleteSysRoleByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysRoleByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteSysRoleByIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{3}
}

type DeleteSysRoleByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *DeleteSysRoleByIDsRequest) Reset() {
	*x = DeleteSysRoleByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysRoleByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysRoleByIDsRequest) ProtoMessage() {}

func (x *DeleteSysRoleByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysRoleByIDsRequest.ProtoReflect.Descriptor instead.
func (*DeleteSysRoleByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSysRoleByIDsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteSysRoleByIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSysRoleByIDsReply) Reset() {
	*x = DeleteSysRoleByIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysRoleByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysRoleByIDsReply) ProtoMessage() {}

func (x *DeleteSysRoleByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysRoleByIDsReply.ProtoReflect.Descriptor instead.
func (*DeleteSysRoleByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{5}
}

type UpdateSysRoleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`       // 角色ID
	RoleName   string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName"`     // 角色名称
	RoleDesc   string `protobuf:"bytes,3,opt,name=roleDesc,proto3" json:"roleDesc"`     // 角色描述
	CreateUser string `protobuf:"bytes,4,opt,name=createUser,proto3" json:"createUser"` // 创建人
	UpdateUser string `protobuf:"bytes,5,opt,name=updateUser,proto3" json:"updateUser"` // 更新人
}

func (x *UpdateSysRoleByIDRequest) Reset() {
	*x = UpdateSysRoleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysRoleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysRoleByIDRequest) ProtoMessage() {}

func (x *UpdateSysRoleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysRoleByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateSysRoleByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSysRoleByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysRoleByIDRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateSysRoleByIDRequest) GetRoleDesc() string {
	if x != nil {
		return x.RoleDesc
	}
	return ""
}

func (x *UpdateSysRoleByIDRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *UpdateSysRoleByIDRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type UpdateSysRoleByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysRoleByIDReply) Reset() {
	*x = UpdateSysRoleByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysRoleByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysRoleByIDReply) ProtoMessage() {}

func (x *UpdateSysRoleByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysRoleByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateSysRoleByIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{7}
}

type SysRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                // 角色ID
	RoleName   string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName"`     // 角色名称
	RoleDesc   string `protobuf:"bytes,3,opt,name=roleDesc,proto3" json:"roleDesc"`     // 角色描述
	CreateUser string `protobuf:"bytes,4,opt,name=createUser,proto3" json:"createUser"` // 创建人
	UpdateUser string `protobuf:"bytes,5,opt,name=updateUser,proto3" json:"updateUser"` // 更新人
	CreatedAt  string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`   // 创建时间
	UpdatedAt  string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt"`   // 更新时间
}

func (x *SysRole) Reset() {
	*x = SysRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRole) ProtoMessage() {}

func (x *SysRole) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRole.ProtoReflect.Descriptor instead.
func (*SysRole) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{8}
}

func (x *SysRole) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysRole) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SysRole) GetRoleDesc() string {
	if x != nil {
		return x.RoleDesc
	}
	return ""
}

func (x *SysRole) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *SysRole) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *SysRole) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysRole) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetSysRoleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetSysRoleByIDRequest) Reset() {
	*x = GetSysRoleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleByIDRequest) ProtoMessage() {}

func (x *GetSysRoleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSysRoleByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{9}
}

func (x *GetSysRoleByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSysRoleByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysRole *SysRole `protobuf:"bytes,1,opt,name=sysRole,proto3" json:"sysRole"`
}

func (x *GetSysRoleByIDReply) Reset() {
	*x = GetSysRoleByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleByIDReply) ProtoMessage() {}

func (x *GetSysRoleByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleByIDReply.ProtoReflect.Descriptor instead.
func (*GetSysRoleByIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{10}
}

func (x *GetSysRoleByIDReply) GetSysRole() *SysRole {
	if x != nil {
		return x.SysRole
	}
	return nil
}

type GetSysRoleByConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions *types.Conditions `protobuf:"bytes,1,opt,name=conditions,proto3" json:"conditions"`
}

func (x *GetSysRoleByConditionRequest) Reset() {
	*x = GetSysRoleByConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleByConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleByConditionRequest) ProtoMessage() {}

func (x *GetSysRoleByConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleByConditionRequest.ProtoReflect.Descriptor instead.
func (*GetSysRoleByConditionRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{11}
}

func (x *GetSysRoleByConditionRequest) GetConditions() *types.Conditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type GetSysRoleByConditionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysRole *SysRole `protobuf:"bytes,1,opt,name=sysRole,proto3" json:"sysRole"`
}

func (x *GetSysRoleByConditionReply) Reset() {
	*x = GetSysRoleByConditionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleByConditionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleByConditionReply) ProtoMessage() {}

func (x *GetSysRoleByConditionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleByConditionReply.ProtoReflect.Descriptor instead.
func (*GetSysRoleByConditionReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{12}
}

func (x *GetSysRoleByConditionReply) GetSysRole() *SysRole {
	if x != nil {
		return x.SysRole
	}
	return nil
}

type ListSysRoleByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *ListSysRoleByIDsRequest) Reset() {
	*x = ListSysRoleByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleByIDsRequest) ProtoMessage() {}

func (x *ListSysRoleByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleByIDsRequest.ProtoReflect.Descriptor instead.
func (*ListSysRoleByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{13}
}

func (x *ListSysRoleByIDsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListSysRoleByIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysRoles []*SysRole `protobuf:"bytes,1,rep,name=sysRoles,proto3" json:"sysRoles"`
}

func (x *ListSysRoleByIDsReply) Reset() {
	*x = ListSysRoleByIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleByIDsReply) ProtoMessage() {}

func (x *ListSysRoleByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleByIDsReply.ProtoReflect.Descriptor instead.
func (*ListSysRoleByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{14}
}

func (x *ListSysRoleByIDsReply) GetSysRoles() []*SysRole {
	if x != nil {
		return x.SysRoles
	}
	return nil
}

type ListSysRoleByLastIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastID uint64 `protobuf:"varint,1,opt,name=lastID,proto3" json:"lastID" form:"lastID"` // last id
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`    // limit size per page
	Sort   string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort" form:"sort"`        // sort by column name of table, default is -id, the - sign indicates descending order.
}

func (x *ListSysRoleByLastIDRequest) Reset() {
	*x = ListSysRoleByLastIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleByLastIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleByLastIDRequest) ProtoMessage() {}

func (x *ListSysRoleByLastIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleByLastIDRequest.ProtoReflect.Descriptor instead.
func (*ListSysRoleByLastIDRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{15}
}

func (x *ListSysRoleByLastIDRequest) GetLastID() uint64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

func (x *ListSysRoleByLastIDRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSysRoleByLastIDRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type ListSysRoleByLastIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysRoles []*SysRole `protobuf:"bytes,1,rep,name=sysRoles,proto3" json:"sysRoles"`
}

func (x *ListSysRoleByLastIDReply) Reset() {
	*x = ListSysRoleByLastIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleByLastIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleByLastIDReply) ProtoMessage() {}

func (x *ListSysRoleByLastIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleByLastIDReply.ProtoReflect.Descriptor instead.
func (*ListSysRoleByLastIDReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{16}
}

func (x *ListSysRoleByLastIDReply) GetSysRoles() []*SysRole {
	if x != nil {
		return x.SysRoles
	}
	return nil
}

type ListSysRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListSysRoleRequest) Reset() {
	*x = ListSysRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleRequest) ProtoMessage() {}

func (x *ListSysRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleRequest.ProtoReflect.Descriptor instead.
func (*ListSysRoleRequest) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{17}
}

func (x *ListSysRoleRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListSysRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64      `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	SysRoles []*SysRole `protobuf:"bytes,2,rep,name=sysRoles,proto3" json:"sysRoles"`
}

func (x *ListSysRoleReply) Reset() {
	*x = ListSysRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sysRole_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleReply) ProtoMessage() {}

func (x *ListSysRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sysRole_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleReply.ProtoReflect.Descriptor instead.
func (*ListSysRoleReply) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sysRole_proto_rawDescGZIP(), []int{18}
}

func (x *ListSysRoleReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSysRoleReply) GetSysRoles() []*SysRole {
	if x != nil {
		return x.SysRoles
	}
	return nil
}

var File_api_sys_v1_sysRole_proto protoreflect.FileDescriptor

var file_api_sys_v1_sysRole_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x40, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x37, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0xb1, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x9a, 0x84, 0x9e, 0x03, 0x08,
	0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xcd,
	0x01, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3d,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03,
	0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x22, 0x51, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x12, 0x9a, 0x84, 0x9e, 0x03, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22,
	0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x22, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x2e, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x18,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x0c, 0x66, 0x6f, 0x72, 0x6d,
	0x3a, 0x22, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x24, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x9a,
	0x84, 0x9e, 0x03, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x4b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x22, 0x3b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x59, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x08, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x32, 0xc5, 0x0c, 0x0a, 0x07, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x53, 0x92, 0x41, 0x36, 0x12, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x24, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x45, 0x92, 0x41, 0x26, 0x12, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x2a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xbd, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x62, 0x92, 0x41, 0x3a, 0x12, 0x1b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x20, 0x69, 0x64, 0x1a, 0x1b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x20, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2f, 0x69, 0x64, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x48, 0x92, 0x41, 0x26, 0x12, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9c, 0x01, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4d, 0x92, 0x41, 0x2e,
	0x12, 0x12, 0x67, 0x65, 0x74, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x20, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x1a, 0x18, 0x67, 0x65, 0x74, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xcd, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x69, 0x92, 0x41, 0x42, 0x12, 0x1f, 0x67, 0x65, 0x74, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x65, 0x74, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb7, 0x01, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x62, 0x92, 0x41, 0x3c, 0x12, 0x1c, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x20, 0x69, 0x64, 0x1a, 0x1c, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x69,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2f, 0x69, 0x64, 0x73, 0x12, 0xb5, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4c,
	0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79,
	0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x57, 0x92, 0x41, 0x38, 0x12, 0x1a, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f,
	0x66, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6c, 0x61, 0x73,
	0x74, 0x20, 0x69, 0x64, 0x1a, 0x1a, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x69, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xb3, 0x01, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x6d, 0x92, 0x41, 0x4b, 0x12, 0x1e, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f,
	0x66, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x29, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f,
	0x66, 0x20, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x42, 0xc5, 0x01, 0x92, 0x41, 0x97, 0x01, 0x12, 0x13, 0x0a, 0x0c, 0x73, 0x79, 0x73,
	0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02,
	0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65,
	0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74,
	0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x69,
	0x6b, 0x77, 0x65, 0x69, 0x2f, 0x61, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_sys_v1_sysRole_proto_rawDescOnce sync.Once
	file_api_sys_v1_sysRole_proto_rawDescData = file_api_sys_v1_sysRole_proto_rawDesc
)

func file_api_sys_v1_sysRole_proto_rawDescGZIP() []byte {
	file_api_sys_v1_sysRole_proto_rawDescOnce.Do(func() {
		file_api_sys_v1_sysRole_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sys_v1_sysRole_proto_rawDescData)
	})
	return file_api_sys_v1_sysRole_proto_rawDescData
}

var file_api_sys_v1_sysRole_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_sys_v1_sysRole_proto_goTypes = []interface{}{
	(*CreateSysRoleRequest)(nil),         // 0: api.sys.v1.CreateSysRoleRequest
	(*CreateSysRoleReply)(nil),           // 1: api.sys.v1.CreateSysRoleReply
	(*DeleteSysRoleByIDRequest)(nil),     // 2: api.sys.v1.DeleteSysRoleByIDRequest
	(*DeleteSysRoleByIDReply)(nil),       // 3: api.sys.v1.DeleteSysRoleByIDReply
	(*DeleteSysRoleByIDsRequest)(nil),    // 4: api.sys.v1.DeleteSysRoleByIDsRequest
	(*DeleteSysRoleByIDsReply)(nil),      // 5: api.sys.v1.DeleteSysRoleByIDsReply
	(*UpdateSysRoleByIDRequest)(nil),     // 6: api.sys.v1.UpdateSysRoleByIDRequest
	(*UpdateSysRoleByIDReply)(nil),       // 7: api.sys.v1.UpdateSysRoleByIDReply
	(*SysRole)(nil),                      // 8: api.sys.v1.SysRole
	(*GetSysRoleByIDRequest)(nil),        // 9: api.sys.v1.GetSysRoleByIDRequest
	(*GetSysRoleByIDReply)(nil),          // 10: api.sys.v1.GetSysRoleByIDReply
	(*GetSysRoleByConditionRequest)(nil), // 11: api.sys.v1.GetSysRoleByConditionRequest
	(*GetSysRoleByConditionReply)(nil),   // 12: api.sys.v1.GetSysRoleByConditionReply
	(*ListSysRoleByIDsRequest)(nil),      // 13: api.sys.v1.ListSysRoleByIDsRequest
	(*ListSysRoleByIDsReply)(nil),        // 14: api.sys.v1.ListSysRoleByIDsReply
	(*ListSysRoleByLastIDRequest)(nil),   // 15: api.sys.v1.ListSysRoleByLastIDRequest
	(*ListSysRoleByLastIDReply)(nil),     // 16: api.sys.v1.ListSysRoleByLastIDReply
	(*ListSysRoleRequest)(nil),           // 17: api.sys.v1.ListSysRoleRequest
	(*ListSysRoleReply)(nil),             // 18: api.sys.v1.ListSysRoleReply
	(*types.Conditions)(nil),             // 19: types.Conditions
	(*types.Params)(nil),                 // 20: types.Params
}
var file_api_sys_v1_sysRole_proto_depIdxs = []int32{
	8,  // 0: api.sys.v1.GetSysRoleByIDReply.sysRole:type_name -> api.sys.v1.SysRole
	19, // 1: api.sys.v1.GetSysRoleByConditionRequest.conditions:type_name -> types.Conditions
	8,  // 2: api.sys.v1.GetSysRoleByConditionReply.sysRole:type_name -> api.sys.v1.SysRole
	8,  // 3: api.sys.v1.ListSysRoleByIDsReply.sysRoles:type_name -> api.sys.v1.SysRole
	8,  // 4: api.sys.v1.ListSysRoleByLastIDReply.sysRoles:type_name -> api.sys.v1.SysRole
	20, // 5: api.sys.v1.ListSysRoleRequest.params:type_name -> types.Params
	8,  // 6: api.sys.v1.ListSysRoleReply.sysRoles:type_name -> api.sys.v1.SysRole
	0,  // 7: api.sys.v1.sysRole.Create:input_type -> api.sys.v1.CreateSysRoleRequest
	2,  // 8: api.sys.v1.sysRole.DeleteByID:input_type -> api.sys.v1.DeleteSysRoleByIDRequest
	4,  // 9: api.sys.v1.sysRole.DeleteByIDs:input_type -> api.sys.v1.DeleteSysRoleByIDsRequest
	6,  // 10: api.sys.v1.sysRole.UpdateByID:input_type -> api.sys.v1.UpdateSysRoleByIDRequest
	9,  // 11: api.sys.v1.sysRole.GetByID:input_type -> api.sys.v1.GetSysRoleByIDRequest
	11, // 12: api.sys.v1.sysRole.GetByCondition:input_type -> api.sys.v1.GetSysRoleByConditionRequest
	13, // 13: api.sys.v1.sysRole.ListByIDs:input_type -> api.sys.v1.ListSysRoleByIDsRequest
	15, // 14: api.sys.v1.sysRole.ListByLastID:input_type -> api.sys.v1.ListSysRoleByLastIDRequest
	17, // 15: api.sys.v1.sysRole.List:input_type -> api.sys.v1.ListSysRoleRequest
	1,  // 16: api.sys.v1.sysRole.Create:output_type -> api.sys.v1.CreateSysRoleReply
	3,  // 17: api.sys.v1.sysRole.DeleteByID:output_type -> api.sys.v1.DeleteSysRoleByIDReply
	5,  // 18: api.sys.v1.sysRole.DeleteByIDs:output_type -> api.sys.v1.DeleteSysRoleByIDsReply
	7,  // 19: api.sys.v1.sysRole.UpdateByID:output_type -> api.sys.v1.UpdateSysRoleByIDReply
	10, // 20: api.sys.v1.sysRole.GetByID:output_type -> api.sys.v1.GetSysRoleByIDReply
	12, // 21: api.sys.v1.sysRole.GetByCondition:output_type -> api.sys.v1.GetSysRoleByConditionReply
	14, // 22: api.sys.v1.sysRole.ListByIDs:output_type -> api.sys.v1.ListSysRoleByIDsReply
	16, // 23: api.sys.v1.sysRole.ListByLastID:output_type -> api.sys.v1.ListSysRoleByLastIDReply
	18, // 24: api.sys.v1.sysRole.List:output_type -> api.sys.v1.ListSysRoleReply
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_sys_v1_sysRole_proto_init() }
func file_api_sys_v1_sysRole_proto_init() {
	if File_api_sys_v1_sysRole_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_sys_v1_sysRole_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysRoleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysRoleByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysRoleByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysRoleByIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysRoleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysRoleByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleByConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleByConditionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleByIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleByLastIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleByLastIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sysRole_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sys_v1_sysRole_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sys_v1_sysRole_proto_goTypes,
		DependencyIndexes: file_api_sys_v1_sysRole_proto_depIdxs,
		MessageInfos:      file_api_sys_v1_sysRole_proto_msgTypes,
	}.Build()
	File_api_sys_v1_sysRole_proto = out.File
	file_api_sys_v1_sysRole_proto_rawDesc = nil
	file_api_sys_v1_sysRole_proto_goTypes = nil
	file_api_sys_v1_sysRole_proto_depIdxs = nil
}
